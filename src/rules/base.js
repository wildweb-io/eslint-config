module.exports = {
	baseRules: {
		'accessor-pairs': [
			2,
			{
				getWithoutSet: false,
				setWithoutGet: true,
				enforceForClassMembers: true,
			},
		],
		'array-bracket-newline': [0, 'consistent'],
		'array-bracket-spacing': [0, 'never'],
		'array-callback-return': [2, {allowImplicit: true, checkForEach: false}],
		'array-element-newline': [0, {multiline: true, minItems: 3}],
		'arrow-body-style': [2, 'as-needed'],
		'arrow-parens': [0, 'always'],
		'arrow-spacing': [0, {before: true, after: true}],
		'babel/object-curly-spacing': [0],
		'babel/quotes': [0],
		'babel/semi': [0],
		'block-scoped-var': [0],
		'block-spacing': [0, 'always'],
		'brace-style': [0, '1tbs', {allowSingleLine: true}],
		'callback-return': [2, ['callback']],
		camelcase: [2, {properties: 'never', ignoreDestructuring: false, ignoreImports: false, ignoreGlobals: true}],
		'capitalized-comments': [
			0,
			'never',
			{
				line: {
					ignorePattern: '.*',
					ignoreInlineComments: true,
					ignoreConsecutiveComments: true,
				},
				block: {
					ignorePattern: '.*',
					ignoreInlineComments: true,
					ignoreConsecutiveComments: true,
				},
			},
		],
		'class-methods-use-this': [2, {exceptMethods: [], enforceForClassFields: true}],
		'comma-dangle': [
			0,
			{
				arrays: 'always-multiline',
				objects: 'always-multiline',
				imports: 'always-multiline',
				exports: 'always-multiline',
				functions: 'always-multiline',
			},
		],
		'comma-spacing': [0, {before: false, after: true}],
		'comma-style': [0, 'last'],
		complexity: [2, 20],
		'computed-property-spacing': [0, 'never'],
		'consistent-return': [0],
		'consistent-this': [0, 'that'],
		'constructor-super': [2],
		curly: [0, 'all'],
		'default-case': [2, {commentPattern: '(?:)'}],
		'default-case-last': [2],
		'default-param-last': [0],
		'dot-location': [2, 'property'],
		'dot-notation': [0, {allowKeywords: true, allowPattern: ''}],
		'eol-last': [2, 'always'],
		eqeqeq: [2, 'smart'],
		'flowtype/boolean-style': [0],
		'flowtype/delimiter-dangle': [0],
		'flowtype/generic-spacing': [0],
		'flowtype/object-type-curly-spacing': [0],
		'flowtype/object-type-delimiter': [0],
		'flowtype/quotes': [0],
		'flowtype/semi': [0],
		'flowtype/space-after-type-colon': [0],
		'flowtype/space-before-generic-bracket': [0],
		'flowtype/space-before-type-colon': [0],
		'flowtype/union-intersection-spacing': [0],
		'for-direction': [2],
		'func-call-spacing': [0, 'never'],
		'func-name-matching': [2, 'never', {includeCommonJSModuleExports: false, considerPropertyDescriptor: true}],
		'func-names': [1],
		'func-style': [2, 'expression', {allowArrowFunctions: true}],
		'function-call-argument-newline': [0, 'consistent'],
		'function-paren-newline': [0, 'consistent'],
		'generator-star': [0],
		'generator-star-spacing': [0, 'after'],
		'getter-return': [2, {allowImplicit: true}],
		'global-require': [0],
		'grouped-accessor-pairs': [2, 'getBeforeSet'],
		'guard-for-in': [0],
		'handle-callback-err': [0],
		'id-blacklist': [0],
		'id-denylist': [2, 'native'],
		'id-length': [2, {min: 2, max: 30, properties: 'never', exceptions: ['_', 'i', 'j', 'k', 'x', 'y', 'z']}],
		'id-match': [0],
		'implicit-arrow-linebreak': [0, 'beside'],
		indent: [
			0,
			2,
			{
				SwitchCase: 1,
				VariableDeclarator: 1,
				outerIIFEBody: 1,
				FunctionDeclaration: {
					parameters: 1,
					body: 1,
				},
				FunctionExpression: {
					parameters: 1,
					body: 1,
				},
				CallExpression: {
					arguments: 1,
				},
				ArrayExpression: 1,
				ObjectExpression: 1,
				ImportDeclaration: 1,
				flatTernaryExpressions: false,
				ignoredNodes: [
					'JSXElement',
					'JSXElement > *',
					'JSXAttribute',
					'JSXIdentifier',
					'JSXNamespacedName',
					'JSXMemberExpression',
					'JSXSpreadAttribute',
					'JSXExpressionContainer',
					'JSXOpeningElement',
					'JSXClosingElement',
					'JSXFragment',
					'JSXOpeningFragment',
					'JSXClosingFragment',
					'JSXText',
					'JSXEmptyExpression',
					'JSXSpreadChild',
				],
				ignoreComments: false,
				offsetTernaryExpressions: false,
			},
		],
		'indent-legacy': [0, 2, {SwitchCase: 1, MemberExpression: 1}],
		'init-declarations': [0, 'always'],
		'jsx-quotes': [2, 'prefer-single'],
		'key-spacing': [0, {beforeColon: false, afterColon: true}],
		'keyword-spacing': [0, {before: true, after: true, overrides: {}}],
		'line-comment-position': [0, {position: 'above'}],
		'linebreak-style': [0, 'unix'],
		'lines-around-comment': [
			0,
			{
				beforeBlockComment: true,
				afterBlockComment: false,
				beforeLineComment: false,
				afterLineComment: false,
				allowBlockStart: false,
				allowBlockEnd: false,
			},
		],
		'lines-around-directive': [2, {before: 'always', after: 'always'}],
		'lines-between-class-members': [0, 'always', {exceptAfterSingleLine: true}],
		'max-classes-per-file': [0, 1],
		'max-depth': [2, 4],
		'max-len': [
			2,
			120,
			4,
			{
				ignoreUrls: true,
				ignoreComments: true,
				ignoreRegExpLiterals: true,
				ignoreStrings: true,
				ignoreTemplateLiterals: true,
			},
		],
		'max-lines': [
			2,
			{
				max: 350,
				skipBlankLines: true,
				skipComments: true,
			},
		],
		'max-lines-per-function': [
			2,
			{
				max: 100,
				skipBlankLines: true,
				skipComments: true,
				IIFEs: true,
			},
		],
		'max-nested-callbacks': [2, 3],
		'max-params': [2, 5],
		'max-statements': [2, 30],
		'max-statements-per-line': [
			2,
			{
				max: 1,
			},
		],
		'multiline-comment-style': [2, 'starred-block'],
		'multiline-ternary': [0, 'always-multiline'],
		'new-cap': [
			1,
			{
				newIsCap: true,
				capIsNew: false,
				properties: true,
			},
		],
		'new-parens': [2],
		'newline-after-var': [0],
		'newline-before-return': [0],
		'newline-per-chained-call': [
			0,
			{
				ignoreChainWithDepth: 3,
			},
		],
		'no-alert': [2],
		'no-array-constructor': [2],
		'no-arrow-condition': [0],
		'no-async-promise-executor': [2],
		'no-await-in-loop': [2],
		'no-bitwise': [0],
		'no-buffer-constructor': [2],
		'no-caller': [2],
		'no-case-declarations': [2],
		'no-catch-shadow': [2],
		'no-class-assign': [2],
		'no-comma-dangle': [0],
		'no-compare-neg-zero': [2],
		'no-cond-assign': [2, 'always'],
		'no-confusing-arrow': [
			0,
			{
				allowParens: true,
				onlyOneSimpleParam: false,
			},
		],
		'no-console': [
			1,
			{
				allow: ['warn', 'error', 'info'],
			},
		],
		'no-const-assign': [2],
		'no-constant-condition': [
			2,
			{
				checkLoops: false,
			},
		],
		'no-constructor-return': [2],
		'no-continue': [0],
		'no-control-regex': [2],
		'no-debugger': [2],
		'no-delete-var': [2],
		'no-div-regex': [2],
		'no-dupe-args': [2],
		'no-dupe-class-members': [2],
		'no-dupe-else-if': [2],
		'no-dupe-keys': [2],
		'no-duplicate-case': [2],
		'no-duplicate-imports': [0],
		'no-else-return': [
			2,
			{
				allowElseIf: false,
			},
		],
		'no-empty': [
			2,
			{
				allowEmptyCatch: true,
			},
		],
		'no-empty-character-class': [2],
		'no-empty-function': [
			2,
			{
				allow: ['arrowFunctions', 'functions'],
			},
		],
		'no-empty-pattern': [2],
		'no-eq-null': [0],
		'no-eval': [2],
		'no-ex-assign': [2],
		'no-extend-native': [2],
		'no-extra-bind': [2],
		'no-extra-boolean-cast': [2],
		'no-extra-label': [2],
		'no-extra-parens': [
			0,
			'all',
			{
				conditionalAssign: true,
				nestedBinaryExpressions: false,
				returnAssign: false,
				ignoreJSX: 'all',
				enforceForArrowConditionals: false,
			},
		],
		'no-extra-semi': [2],
		'no-fallthrough': [2],
		'no-floating-decimal': [2],
		'no-func-assign': [2],
		'no-global-assign': [
			2,
			{
				exceptions: [],
			},
		],
		'no-implicit-coercion': [
			2,
			{
				boolean: false,
				number: true,
				string: true,
				disallowTemplateShorthand: false,
				allow: [],
			},
		],
		'no-implicit-globals': [2],
		'no-implied-eval': [2],
		'no-import-assign': [2],
		'no-inline-comments': [0],
		'no-inner-declarations': [2, 'functions'],
		'no-invalid-regexp': [
			2,
			{
				allowConstructorFlags: ['u', 'y'],
			},
		],
		'no-invalid-this': [2],
		'no-irregular-whitespace': [2],
		'no-iterator': [2],
		'no-label-var': [2],
		'no-labels': [
			2,
			{
				allowLoop: false,
				allowSwitch: false,
			},
		],
		'no-lone-blocks': [2],
		'no-lonely-if': [2],
		'no-loop-func': [2],
		'no-loss-of-precision': [2],
		'no-magic-numbers': [
			0,
			{
				ignore: [],
				ignoreArrayIndexes: true,
				enforceConst: true,
				detectObjects: false,
			},
		],
		'no-misleading-character-class': [2],
		'no-mixed-operators': [
			'error',
			{
				groups: [
					['%', '**'],
					['%', '+'],
					['%', '-'],
					['%', '*'],
					['%', '/'],
					['/', '*'],
					['&', '|', '<<', '>>', '>>>'],
					['==', '!=', '===', '!=='],
					['&&', '||'],
				],
				allowSamePrecedence: true,
			},
		],
		'no-mixed-requires': [0, false],
		'no-mixed-spaces-and-tabs': [0],
		'no-multi-assign': [
			2,
			{
				ignoreNonDeclaration: false,
			},
		],
		'no-multi-spaces': [
			2,
			{
				ignoreEOLComments: false,
			},
		],
		'no-multi-str': [2],
		'no-multiple-empty-lines': [
			2,
			{
				max: 1,
				maxEOF: 1,
			},
		],
		'no-native-reassign': [0],
		'no-negated-condition': [2],
		'no-negated-in-lhs': [0],
		'no-nested-ternary': [0],
		'no-new': [2],
		'no-new-func': [2],
		'no-new-object': [2],
		'no-new-require': [0],
		'no-new-symbol': [2],
		'no-new-wrappers': [2],
		'no-nonoctal-decimal-escape': [2],
		'no-obj-calls': [2],
		'no-octal': [2],
		'no-octal-escape': [2],
		'no-param-reassign': [
			2,
			{props: true, ignorePropertyModificationsFor: [], ignorePropertyModificationsForRegex: []},
		],
		'no-path-concat': [2],
		'no-plusplus': [2, {allowForLoopAfterthoughts: true}],
		'no-process-env': [2],
		'no-process-exit': [2],
		'no-promise-executor-return': [2],
		'no-proto': [2],
		'no-prototype-builtins': [2],
		'no-redeclare': [2],
		'no-regex-spaces': [2],
		'no-reserved-keys': [0],
		'no-restricted-exports': [2, {restrictedNamedExports: ['then']}],
		'no-restricted-globals': [
			0,
			{
				name: 'isFinite',
				message: 'Use Number.isFinite instead https://github.com/airbnb/javascript#standard-library--isfinite',
			},
			{
				name: 'isNaN',
				message: 'Use Number.isNaN instead https://github.com/airbnb/javascript#standard-library--isnan',
			},
			'addEventListener',
			'blur',
			'close',
			'closed',
			'confirm',
			'defaultStatus',
			'defaultstatus',
			'event',
			'external',
			'find',
			'focus',
			'frameElement',
			'frames',
			'history',
			'innerHeight',
			'innerWidth',
			'length',
			'location',
			'locationbar',
			'menubar',
			'moveBy',
			'moveTo',
			'name',
			'onblur',
			'onerror',
			'onfocus',
			'onload',
			'onresize',
			'onunload',
			'open',
			'opener',
			'opera',
			'outerHeight',
			'outerWidth',
			'pageXOffset',
			'pageYOffset',
			'parent',
			'print',
			'removeEventListener',
			'resizeBy',
			'resizeTo',
			'screen',
			'screenLeft',
			'screenTop',
			'screenX',
			'screenY',
			'scroll',
			'scrollbars',
			'scrollBy',
			'scrollTo',
			'scrollX',
			'scrollY',
			'self',
			'status',
			'statusbar',
			'stop',
			'toolbar',
			'top',
		],
		'no-restricted-imports': [0, {paths: [], patterns: []}],
		'no-restricted-modules': [0],
		'no-restricted-properties': [
			2,
			{
				object: 'Symbol',
				property: 'for',
				message: 'Symbol.for is unshimmable',
			},
			{
				object: 'arguments',
				property: 'callee',
				message: 'arguments.callee is deprecated',
			},
			{
				property: '__defineGetter__',
				message: 'Please use Object.defineProperty instead.',
			},
			{
				property: '__defineSetter__',
				message: 'Please use Object.defineProperty instead.',
			},
		],
		'no-restricted-syntax': [
			2,
			'DebuggerStatement',
			{
				selector: 'ForInStatement',
				message:
					'for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.',
			},
			{
				selector: 'LabeledStatement',
				message: 'Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.',
			},
			{
				selector: 'WithStatement',
				message: '`with` is disallowed in strict mode because it makes code impossible to predict and optimize.',
			},
		],
		'no-return-assign': [2, 'always'],
		'no-return-await': [2],
		'no-script-url': [2],
		'no-self-assign': [2, {props: true}],
		'no-self-compare': [0],
		'no-sequences': [2, {allowInParentheses: false}],
		'no-setter-return': [2],
		'no-shadow': [0],
		'no-shadow-restricted-names': [2],
		'no-space-before-semi': [0],
		'no-spaced-func': [0],
		'no-sparse-arrays': [2],
		'no-sync': [0],
		'no-tabs': [0],
		'no-template-curly-in-string': [2],
		'no-ternary': [0],
		'no-this-before-super': [2],
		'no-throw-literal': [2],
		'no-trailing-spaces': [
			2,
			{
				skipBlankLines: false,
				ignoreComments: false,
			},
		],
		'no-undef': [0],
		'no-undef-init': [2],
		'no-undefined': [0],
		'no-underscore-dangle': [
			0,
			{
				allow: ['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'],
				allowAfterThis: false,
				allowAfterSuper: false,
				enforceInMethodNames: true,
				allowAfterThisConstructor: false,
				allowFunctionParams: true,
				enforceInClassFields: false,
			},
		],
		'no-unexpected-multiline': [2],
		'no-unmodified-loop-condition': [2],
		'no-unneeded-ternary': [2, {defaultAssignment: false}],
		'no-unreachable': [2],
		'no-unreachable-loop': [2, {ignore: []}],
		'no-unsafe-finally': [2],
		'no-unsafe-negation': [2, {enforceForOrderingRelations: true}],
		'no-unsafe-optional-chaining': [2, {disallowArithmeticOperators: true}],
		'no-unused-labels': [2],
		'no-unused-private-class-members': [2],
		'no-unused-vars': [
			0,
			{
				vars: 'all',
				args: 'after-used',
				ignoreRestSiblings: true,
			},
		],
		'no-use-before-define': [0, 'nofunc'],
		'no-useless-backreference': [2],
		'no-useless-call': [2],
		'no-useless-catch': [2],
		'no-useless-computed-key': [2, {enforceForClassMembers: true}],
		'no-useless-concat': [2],
		'no-useless-constructor': [2],
		'no-useless-escape': [2],
		'no-useless-rename': [
			2,
			{
				ignoreDestructuring: false,
				ignoreImport: false,
				ignoreExport: false,
			},
		],
		'no-useless-return': [2],
		'no-var': [0],
		'no-void': [0, {allowAsStatement: true}],
		'no-warning-comments': [2, {terms: ['fixme']}],
		'no-whitespace-before-property': [0],
		'no-with': [2],
		'no-wrap-func': [0],
		'nonblock-statement-body-position': [0, 'beside', {overrides: {}}],
		'object-curly-newline': [
			0,
			{
				ObjectExpression: {
					minProperties: 4,
					multiline: true,
					consistent: true,
				},
				ObjectPattern: {
					minProperties: 4,
					multiline: true,
					consistent: true,
				},
				ImportDeclaration: {
					minProperties: 4,
					multiline: true,
					consistent: true,
				},
				ExportDeclaration: {
					minProperties: 4,
					multiline: true,
					consistent: true,
				},
			},
		],
		'object-curly-spacing': [0, 'never'],
		'object-property-newline': [
			0,
			{
				allowAllPropertiesOnSameLine: true,
				allowMultiplePropertiesPerLine: false,
			},
		],
		'object-shorthand': [2, 'always'],
		'one-var': [0, 'never'],
		'one-var-declaration-per-line': [2, 'initializations'],
		'operator-assignment': [0, 'always'],
		'operator-linebreak': [
			0,
			'after',
			{
				overrides: {
					'?': 'before',
					':': 'before',
				},
			},
		],
		'padded-blocks': [
			0,
			{
				blocks: 'never',
				classes: 'never',
				switches: 'never',
			},
			{
				allowSingleLineBlocks: true,
			},
		],
		'padding-line-between-statements': [
			0,
			{
				blankLine: 'always',
				prev: 'directive',
				next: '*',
			},
			{
				blankLine: 'any',
				prev: 'directive',
				next: 'directive',
			},
		],
		'prefer-arrow-callback': [
			2,
			{
				allowNamedFunctions: true,
				allowUnboundThis: true,
			},
		],
		'prefer-const': [0, {destructuring: 'any', ignoreReadBeforeAssign: true}],
		'prefer-destructuring': [
			0,
			{
				VariableDeclarator: {
					array: false,
					object: true,
				},
				AssignmentExpression: {
					array: true,
					object: true,
				},
			},
			{
				enforceForRenamedProperties: false,
			},
		],
		'prefer-exponentiation-operator': [0],
		'prefer-named-capture-group': [0],
		'prefer-numeric-literals': [0],
		'prefer-object-has-own': [0],
		'prefer-object-spread': [0],
		'prefer-promise-reject-errors': [2, {allowEmptyReject: true}],
		'prefer-reflect': [0],
		'prefer-regex-literals': [2, {disallowRedundantWrapping: true}],
		'prefer-rest-params': [0],
		'prefer-spread': [0],
		'prefer-template': [0],
		'prettier/prettier': [2],
		'quote-props': [2, 'as-needed', {keywords: true}],
		quotes: [2, 'single', 'avoid-escape'],
		radix: [2],
		'require-atomic-updates': [2, {allowProperties: true}],
		'require-await': [2],
		'require-jsdoc': [0],
		'require-unicode-regexp': [0],
		'require-yield': [2],
		'rest-spread-spacing': [2, 'never'],
		semi: [2, 'always'],
		'semi-spacing': [
			2,
			{
				before: false,
				after: true,
			},
		],
		'semi-style': [2, 'last'],
		'sort-imports': [
			0,
			{
				ignoreCase: false,
				ignoreDeclarationSort: false,
				ignoreMemberSort: false,
				memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
			},
		],
		'sort-keys': [
			0,
			'asc',
			{
				caseSensitive: false,
				natural: true,
			},
		],
		'sort-vars': [0],
		'space-after-function-name': [0],
		'space-after-keywords': [0],
		'space-before-blocks': [0, 'always'],
		'space-before-function-paren': [
			0,
			{
				anonymous: 'never',
				named: 'never',
				asyncArrow: 'always',
			},
		],
		'space-before-function-parentheses': [0],
		'space-before-keywords': [0],
		'space-in-brackets': [0],
		'space-in-parens': [0, 'never'],
		'space-infix-ops': [0],
		'space-return-throw-case': [0],
		'space-unary-ops': [
			0,
			{
				words: true,
				nonwords: false,
			},
		],
		'space-unary-word-ops': [0],
		'spaced-comment': [
			2,
			'always',
			{
				markers: ['='],
			},
		],
		strict: [2, 'global'],
		'switch-colon-spacing': [
			0,
			{
				after: true,
				before: false,
			},
		],
		'symbol-description': [2],
		'template-curly-spacing': [0, 'never'],
		'template-tag-spacing': [0, 'never'],
		'unicode-bom': [2, 'never'],
		'use-isnan': [
			2,
			{
				enforceForSwitchCase: true,
				enforceForIndexOf: false,
			},
		],
		'valid-jsdoc': [0],
		'valid-typeof': [
			2,
			{
				requireStringLiterals: true,
			},
		],
		'vars-on-top': [0],
		'wrap-iife': [
			2,
			'outside',
			{
				functionPrototypeMethods: true,
			},
		],
		'wrap-regex': [0],
		'yield-star-spacing': [
			0,
			{
				before: false,
				after: true,
			},
		],
		yoda: [
			2,
			'never',
			{
				exceptRange: true,
				onlyEquality: false,
			},
		],
	},
};
