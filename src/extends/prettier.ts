import path from 'node:path';
import {fileURLToPath} from 'node:url';
import type {Linter} from 'eslint';
import {FlatCompat} from '@eslint/eslintrc';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const compat = new FlatCompat({
	baseDirectory: __dirname,
	resolvePluginsRelativeTo: __dirname,
});

export const prettierConfig = [
	...compat.config({
		'extends': ['prettier'],
		plugins: ['prettier'],
		rules: {
			'prettier/prettier': 'error',
			'array-bracket-newline': 'off',
			'array-bracket-spacing': 'off',
			'array-element-newline': 'off',
			'arrow-parens': 'off',
			'arrow-spacing': 'off',
			'block-spacing': 'off',
			'@typescript-eslint/block-spacing': 'off',
			'brace-style': 'off',
			'@typescript-eslint/brace-style': 'off',
			'comma-dangle': 'off',
			'@typescript-eslint/comma-dangle': 'off',
			'comma-spacing': 'off',
			'@typescript-eslint/comma-spacing': 'off',
			'comma-style': 'off',
			'computed-property-spacing': 'off',
			curly: 'off',
			'dot-location': 'off',
			'eol-last': 'off',
			'func-call-spacing': 'off',
			'@typescript-eslint/func-call-spacing': 'off',
			'function-call-argument-newline': 'off',
			'function-paren-newline': 'off',
			'generator-star-spacing': 'off',
			'implicit-arrow-linebreak': 'off',
			indent: 'off',
			'@typescript-eslint/indent': 'off',
			'react/jsx-child-element-spacing': 'off',
			'react/jsx-closing-bracket-location': 'off',
			'react/jsx-closing-tag-location': 'off',
			'react/jsx-curly-newline': 'off',
			'react/jsx-curly-spacing': 'off',
			'react/jsx-equals-spacing': 'off',
			'react/jsx-first-prop-new-line': 'off',
			'react/jsx-indent': 'off',
			'react/jsx-indent-props': 'off',
			'react/jsx-max-props-per-line': 'off',
			'react/jsx-newline': 'off',
			'react/jsx-one-expression-per-line': 'off',
			'react/jsx-props-no-multi-spaces': 'off',
			'jsx-quotes': 'off',
			'react/jsx-tag-spacing': 'off',
			'react/jsx-wrap-multilines': 'off',
			'key-spacing': 'off',
			'@typescript-eslint/key-spacing': 'off',
			'keyword-spacing': 'off',
			'@typescript-eslint/keyword-spacing': 'off',
			'linebreak-style': 'off',
			'lines-around-comment': 'off',
			'@typescript-eslint/lines-around-comment': 'off',
			'max-len': 'off',
			'max-statements-per-line': 'off',
			'@typescript-eslint/member-delimiter-style': 'off',
			'multiline-ternary': 'off',
			'new-parens': 'off',
			'newline-per-chained-call': 'off',
			'no-confusing-arrow': 'off',
			'no-extra-parens': 'off',
			'@typescript-eslint/no-extra-parens': 'off',
			'no-extra-semi': 'off',
			'@typescript-eslint/no-extra-semi': 'off',
			'no-floating-decimal': 'off',
			'no-mixed-operators': 'off',
			'no-mixed-spaces-and-tabs': 'off',
			'no-multi-spaces': 'off',
			'no-multiple-empty-lines': 'off',
			'no-tabs': 'off',
			'no-trailing-spaces': 'off',
			'no-unexpected-multiline': 'off',
			'no-whitespace-before-property': 'off',
			'nonblock-statement-body-position': 'off',
			'object-curly-newline': 'off',
			'object-curly-spacing': 'off',
			'@typescript-eslint/object-curly-spacing': 'off',
			'object-property-newline': 'off',
			'one-var-declaration-per-line': 'off',
			'operator-linebreak': 'off',
			'padded-blocks': 'off',
			'quote-props': 'off',
			quotes: 'off',
			'@typescript-eslint/quotes': 'off',
			'rest-spread-spacing': 'off',
			semi: 'off',
			'@typescript-eslint/semi': 'off',
			'semi-spacing': 'off',
			'semi-style': 'off',
			'space-before-blocks': 'off',
			'@typescript-eslint/space-before-blocks': 'off',
			'space-before-function-paren': 'off',
			'@typescript-eslint/space-before-function-paren': 'off',
			'space-in-parens': 'off',
			'space-infix-ops': 'off',
			'@typescript-eslint/space-infix-ops': 'off',
			'space-unary-ops': 'off',
			'switch-colon-spacing': 'off',
			'template-curly-spacing': 'off',
			'template-tag-spacing': 'off',
			'@typescript-eslint/type-annotation-spacing': 'off',
			'wrap-iife': 'off',
			'wrap-regex': 'off',
			'yield-star-spacing': 'off',
		},
	}),
] satisfies Linter.FlatConfig[];
